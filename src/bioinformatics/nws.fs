type Action =
    | DONE
    | NO_A
    | NO_B
    | A_B

let bl = "ACDEFGHIKLMNPQRSTVWY"
let dict = new System.Collections.Generic.Dictionary<char,int>()
for i in 0 .. (bl.Length-1) do
    dict.Add(bl.[i], i)

let blosum62 =[ [ 4;  0; -2; -1; -2;  0; -2; -1; -1; -1; -1; -2; -1; -1; -1;  1;  0;  0; -3; -2];
                [ 0;  9; -3; -4; -2; -3; -3; -1; -3; -1; -1; -3; -3; -3; -3; -1; -1; -1; -2; -2];
                [-2; -3;  6;  2; -3; -1; -1; -3; -1; -4; -3;  1; -1;  0; -2;  0; -1; -3; -4; -3];
                [-1; -4;  2;  5; -3; -2;  0; -3;  1; -3; -2;  0; -1;  2;  0;  0; -1; -2; -3; -2];
                [-2; -2; -3; -3;  6; -3; -1;  0; -3;  0;  0; -3; -4; -3; -3; -2; -2; -1;  1;  3];
                [ 0; -3; -1; -2; -3;  6; -2; -4; -2; -4; -3;  0; -2; -2; -2;  0; -2; -3; -2; -3];
                [-2; -3; -1;  0; -1; -2;  8; -3; -1; -3; -2;  1; -2;  0;  0; -1; -2; -3; -2;  2];
                [-1; -1; -3; -3;  0; -4; -3;  4; -3;  2;  1; -3; -3; -3; -3; -2; -1;  3; -3; -1];
                [-1; -3; -1;  1; -3; -2; -1; -3;  5; -2; -1;  0; -1;  1;  2;  0; -1; -2; -3; -2];
                [-1; -1; -4; -3;  0; -4; -3;  2; -2;  4;  2; -3; -3; -2; -2; -2; -1;  1; -2; -1];
                [-1; -1; -3; -2;  0; -3; -2;  1; -1;  2;  5; -2; -2;  0; -1; -1; -1;  1; -1; -1];
                [-2; -3;  1;  0; -3;  0;  1; -3;  0; -3; -2;  6; -2;  0;  0;  1;  0; -3; -4; -2];
                [-1; -3; -1; -1; -4; -2; -2; -3; -1; -3; -2; -2;  7; -1; -2; -1; -1; -2; -4; -3];
                [-1; -3;  0;  2; -3; -2;  0; -3;  1; -2;  0;  0; -1;  5;  1;  0; -1; -2; -2; -1];
                [-1; -3; -2;  0; -3; -2;  0; -3;  2; -2; -1;  0; -2;  1;  5; -1; -1; -3; -3; -2];
                [ 1; -1;  0;  0; -2;  0; -1; -2;  0; -2; -1;  1; -1;  0; -1;  4;  1; -2; -3; -2];
                [ 0; -1; -1; -1; -2; -2; -2; -1; -1; -1; -1;  0; -1; -1; -1;  1;  5;  0; -2; -2];
                [ 0; -1; -3; -2; -1; -3; -3;  3; -2;  1;  1; -3; -2; -2; -3; -2;  0;  4; -3; -1];
                [-3; -2; -4; -3;  1; -2; -2; -3; -3; -2; -1; -4; -4; -2; -3; -3; -2; -3; 11;  2];
                [-2; -2; -3; -2;  3; -3;  2; -1; -2; -1; -1; -2; -3; -1; -2; -2; -2; -1;  2;  7];
]

let score (a:char) (b:char) : int =
    let x = dict.[a]
    let y = dict.[b]
    blosum62.[x].[y]

let gap = -5

let globalalign (a:string) (b:string) =

    let sa : int[,] = Array2D.init (b.Length+1) (a.Length+1)
                                      (fun x y -> match (x,y) with
                                                  | (0,_)
                                                  | (_,0) -> (x + y) * gap
                                                  | _ -> 0)

    let aa : Action[,] = Array2D.init (b.Length+1) (a.Length+1)
                                      (fun x y -> match (x,y) with
                                                  | (0,0) -> Action.DONE
                                                  | (_,0) -> Action.NO_B
                                                  | (0,_) -> Action.NO_A
                                                  | _ -> Action.DONE)

    let mutable gm,gmi,gmj = (System.Int32.MinValue,0,0)

    for i in 1..(b.Length) do
        let bi = b.[i-1]
        for j in 1..(a.Length) do
            let aj = a.[j-1]
            let sc = score bi aj
            let d = sa.[i-1,j-1] + sc
            let t = sa.[i-1,j] + gap
            let l = sa.[i,j-1] + gap
            let m = max d (max t l)
            if (m > gm) then
               gm <- m
               gmi <- i
               gmj <- j
            sa.[i,j] <- m
            aa.[i,j] <- match m with
                         | _ when d=m -> Action.A_B
                         | _ when t=m -> Action.NO_A
                         | _ when l=m -> Action.NO_B
                         | _ -> Action.DONE

    let mutable bi,bj = (gmi,gmj)
    let mutable action = aa.[bi,bj]
    let mutable ansa : char list = []
    let mutable ansb : char list = []
    while (action <> Action.DONE) do
        //printfn "%A %i %i" action bi bj
        match action with
        | Action.NO_A ->
            ansa <- '-' :: ansa
            ansb <- b.[bi-1] :: ansb
            bi <- bi - 1
        | Action.NO_B ->
            ansa <- a.[bj-1] :: ansa
            ansb <- '-' :: ansb
            bj <- bj - 1
        | Action.A_B ->
            ansa <- a.[bj-1] :: ansa
            ansb <- b.[bi-1] :: ansb
            bj <- bj - 1
            bi <- bi - 1
        | Action.DONE -> ()
        action <- aa.[bi,bj]

    (gm, System.String.Concat(ansa), System.String.Concat(ansb))

let gm, xa, xb = globalalign
                    "FMTRFKPRDRTWKYNCTTIFIESSVIKAPCLYFIMIRFCEIEAKHAERKFRQMWNQKYQSQVHEELNETTGDHPKQWERIMSGPEWYFNGMHYMEMAYSCLWLTWYWKCDNTTAIAITRVYSCCDAVKSYVRTAFDCDNMSMCGMSTWHLFGWDQEGYRQSHGRRFCKRDHIRWPRLPMLFTWNCHWCERCPFHYRFAYNTFLNPYFQSLPEVETMQYHFNCDHLHQPIPQGTADPIVHFCDHDGIFEATHQNNRYHIHGTGEIYHVTGDEGKDSVCWWDTYCIAYSFQTNWHCLYPEEEWTLEFGDSDFYQWHECFRVNLNTITHHYNQYFLTSCIGTPSSKQYNPVVYMRYMFNYTNIGTTRMQPGLHGYFNTFVETTHVYPSFPDATVSLAPNTEGQMKQRHWHRICRSPCNCGLRPWVYAICQIRLWPNVTNHGTHQEKPIDYTDFCCNWCGKHFRMEWLFGNYIRHHFFSKCCKQESMVCCFWMRCNCPEEAPNRGLAVNIPTYRTKFTHWSDSSTTWQEWSGTRMFMVTKYRTVLASMFSAFGLTQRFKLCVHAWKCLNFSHGAKWQFTGYNFPCVGHLTSGWNLMANEDEAFHSDPNMFSESHYPDYPLYYNMKHNEDDCEKAECWFYEQAQIDMDCTEVGDLCESPDLVHKMAYNMSMDFTAIHNMVSQYNLHWATCDTCNLEVHIVFFRGYKPMTPFAEVAPMKPGAEVNYTIPRWWKPYIKPWSREQRNAPIPFFWRMREGGMSGDQMERVMANIINDLDHWHWPLHWRCFQMACHYRHFGYHFGSYTEDFFQTMCKWTMGPKFETKHYPKAWHTRMHNHSNIFHTKVPDSLFLFQIYDTRSLALDTVANNEVVQFMVRRNYGWKVCKNFHFWRYWPWFKRSDSHHHEIRVDHAHGDRYDFVRCTLEWFKPHCVACEDKVMITPMECERAYNGRYCSNMAHPFWCSIYQWEHPQCHHEYFQMRIGQTHKNAGQSTTKMVHDIWQTPLLYEFPENINCNWVQHDTPPFVWAGRLCGTWFPCLNAFSETKNDCITKMFECCQIGCKMEIGWKKGAEAAYDIMSHCDDSGKNKKSKPLIEMYELGHVTTTVPFLWVNFAYSNHIGMNTPESHIMGTKGEHNFIEIIRTWMPHCTPLYWNHLFYLWQCCQFCSHMQMNPHLRNYMFVRMDNWLVADRFAYWSVCHCATNAFAIEHQSTWGQMCPTIWFYTVQGKIERQSCCAHIDCWCYPICMYCSDKQVTQEPPMKGRLDFTQINGFGHLLRAQHPYAPHWNMLFKQDYSNLDMMNYYQPPIWIWREIRTFIIEYIPQDGLQGCVDVWSKEVCGTPLNKHRAHRVWTQGTCYQMYYIVWYCAMHICDESYNVYTMDLYNYQQDRWKRTDQNECFAAWCARCRMFYGHMKCWEMMQDIKKAHPWYFTVVFSSIYILFQKLGMALSVGIKERLKFSQQERHECRFRGFKMQPWTPEPIGWDTNEFTTNYEWITHHHCVDNVIFENTYKCATVNVFLHPTQWGVLCARRGHPDDGMICDLPNVCHIFFNLILMCRQANQADHINRYHNDWSIGDMEWSADANMMMVSSTCIAHWGRQKTGFLLPIEARLQKACCNQLRGNDFWKEFEVFKIEWIMLSHEHIHYYKFMEVAAYHHDLHMCQPESLRARDIPEFPSTHLTFHLARREFDPKGSVFWCRDPMDHKYFYIWYFYRIYRTIEYYMCWNLCPWMMIGGSHYYRIVKIFFLEAGLYICFEYTDPYLFAGIDRVYGKMHTVNDHDVARSNKRVVFAPAFDKMWAKRGYAWTYEIDRYCFPKGGGEKFHGIWSFVAETPRILAQWQQYPLKATLNFEYMLFTLTFEAAPQMWDRYLCDHDMKQHREWGCWHRTCYVFKIPEICDECYYSPRSPNALECIGLEPPRRYTLSVKYCKFYQDQQFDITPRPDHIDNFDSLTPCHMYKVDMELDVTRHGIEFACPWFTAFVIQNIKRILHWMGVCPQNEVCGGEQSRKGRRFHENMSGMKAEEEMHCMHQQRIYNVGCMVASPRYTFNVFLWTFVSNPNVYCVPSHDDCWLWPLPMHTGWEMGMMLRDAIVKHSLNYNDLNHPLLNWYCEYDCSRPHVQMLWHNPCEAVILQFPKFTASLYEVDPRMADGQAKEFYRNAMSVTLEVNLFVDTNDLSMYDRDYPDFSCHIVKEVRNSIEWMEEMCEIKIAYSCDTKDIQTTDCWQQLHGSFWPIWHGMFFGIAWISLFCACFEFHKERDCWAFHWHRGVEYRAEHKLRMNCHRTMRDMHWIAMEWNFWPPTPQVMGARSEMMAPGDEVDTRECHYGLIKTGCLIDEAAFWQARCKYGLPFVACVDWDLATHVWHAYNRSRNHHWHGFEQTRRTRFCSPQFYHSSFRLEYYYQYLFVQPDLRRFPQSLDDFFDTTTELPWQICGAAPVLKLEHLWKSDFTQQMLEMITNVDKSCENYGGNIKFNVYKNANFHLYDGVIPYPSRTSRDHHDQPGSDEYSNLLLMMRTNQDSPTHNGYWMEECGHPGHRNAEIWNNNNCWTKQIQTKAIIPNHISNCMSLGHHPSGKAYAVPITAQIIVKAYEKMPYEGCHNMITTCHHWMMQNNFGNNAYYCQFSQQKDHYENCDFGNCVIKEGNLWCGIPGLCMWPDALSQLEFEQSYEETNKIWPDWHRSRYCKLSATDNLVMMQRICPGCMVRIEYHFNKIQNTAHDMDHAPYTSSLPKEEFHPYVHDQDQHQMTPAKVYSMTFGALNYHNLHDFYFIQHGRPHFLCDQYNMFTCEVQKSAVVSSSYMWDIHNQRYGKVCSVTAYYNPFFNLHTRNTNSTTSSSLVPVPWDEHHRKSEAWGPETKGHWCNWLCLFLEMCTSLCREQPGLDISLYSRKSPMNTKHATCTKQIEHAASVSPSSMLKDDIMRKSCCEWFDSVYYTKCTIGEKQYPNWMKHCTEHHMTFVGTRRSPTQHTFIHCHTWITQQGVWHAGRVSFMMCYSRHCNAPQNCVWHPPDIAFFECKILTDGLALEWLLVQDAVRAHFTSLPWKMDASSCEECCNAQPRIGIHRKQSAWNAECQDSFDDSLKGFAASQRNCIRPIVYGYQDMDDIQDSSFTNDLNRERMVFASVVDEFVIWIGAHKYDRSFIHASQVQGAEVAPGTKMKCAGFCSDAGPSTGANSMMQYFYGDIRARYDVAVPTTTLEGNKWPFHLEDLYDAMYDVQEQCPQTAYRCARILHHVGHWLAQTPYNFPYRIIQSLHNVAAQKMKSPKLHSGVYNIQTLQCGEWDHLIGLDAIWPHRHQSFQATWTTPHWNKNALTHFEYATMDYHDSEFNCCRRQYNDGWTDCINCDRIPVVWFPRHWWFLEIGLQINATWWEWELVEKPISCFCFPFRHWNFYSLQYPLRMGWRENIIVYLPRLPNVNKECRRTRKHGTFGDTMIFLIRAWTMPPQRYMYQRHISPNKWIAQEKGVCHTERVIENTETQLFETDKNLPTTWPKLQFETENNHPCIFCNGKRKRGLKLLGNNMKLSCDNDLAEVKSEAGQMLCWSNDQSDDWSWVVDRCRMCLRNPRSVANVIIEKMKCKVYGTACEQASCNNLNYNVHCWMNSTALEGLPTNWNNVYCFIERAIIHMLMHSFLHQDHRSQNKVELKMNYRYNYYSMYINTDLCWNMVCKWLIPSVWPHWCMCIVRLDYQRQYFGGVRTLKWEKVWTFNSIMLIEWNTFISRSNWKSHDDDWDNFHGYTCGLIQYGFTNMESYCNDGLPKQPALTDWGENRGKITPFFFWPEGNLDMVAYHVNTMHVWDWNAEATAGKYTVEPIDFCLFP"
                    "FMTRLRVMPRRQSHQYPVFRDRTWKYNWPHETARTVIKAYFIMIRFCEIQSTSNTWQEFNFHDKFNWKAQKPLFSQLNNMWMDTTGDWPKTYVERIMSGPEWYFWGMKHWPVVTGLWLYIAFYWYWKCDNTTAIAITRVYSHCKIALCELRCHEQSYVYCARNCMSMCRFDMSTWHLFGWDQEGYREWEQIDHILWPRLPYLFEGKFNWNCHWCERCPFHYRFAYNEFLNPYFLPHRMHFNCWHFNSPYVHFCYHDAIFEATHTGIIYGTDSVCGTYCIQYSFQTNWHCLYPEEDFYQVNLITHHYNQYFLSSKQYNPVEFMRYMFNYTAITNTWTTYMQPGLHGYFNSFSFGSDRRFVETTHVYPMFPFNATMSLAAVRNTEGQMKQRHWHRLCRKPCNCGLRPWVYAICQIRLWMNVTAHGTSVEQEKPIDYTDFCCNWRMMGKHFTMAWLFGNYIRHHFFSKCCRQEMVCCFWMRCNFPQCCEAEALNTRWNRGLAQNIPTSRTCCTHSTTWQEWSGTRMFMVTKYGFESMSSRFILTHFYLRFKLVHAWISLCKICYPCLNFAKWQFYMCTAAFPCDGHLFSGGRGLVANEDEAFKTRWASDPSMSSIQYPDYPLYYNMKHNEYDCEKACERCWFYAGDLCEPPSVSPVVSLVHKMAYNMSMDFTAIHNMVSQYNLHWAVHIVFIILKENRGYAPMTPFAEVGACVRWWKPYIKPWWQPIPFEGGMSGDQMERVMFDGCDLNCVIECQMACPRTCPGNRWYRHFGMHHGSQQRFCKWTMGPWPKAWHTMHNHSYNTWMTGNGVFHTKVPWSLFAFQIYVNVKEVVQFMVRENKWFHFSTHWPWHEIRVDHAMGDYYDFVRCTLEWLAEPKMNQRYCRNMFYQYSLVPVWCSIMAMVYAFAHEYFQMRIGQTHKNAGQSTTKMVHDIWQTPVQHYTPPFVRLCGTQFPCLHIVPQGSQNAETSLWSETKNDCITKMFCCCQIGCITGKNKKSKNGDLVTLWVNFAYHIGMNTPESHIMGTKGEHNFIHIIRTWMPQTTPYHWYDQTPLYFNHLGYLWQCHMQDNPHLRNYMFVAMDNWLVADRFAYWIVCHCALYWANAFAIEWWQMRHPVMPPRSGIVGFGVDTLNFRSGNNMAYYWCCAHIDCWLNQWRPGCYPYCPSKEQFGMYVTQSAHLQHPLRAQHPYAPHWNMLFKRQDYSLDMMYQPPIIIVRIPQDGLQGCVDVWPKEVCGTPLNKHRKHEQKTCPQMYYIFWYCAMHICDESYNVIAMDLYNYQQDRFAAWCARGFYGHMICWEAHPWYFSSKLVYIWLQKLGMALSQQERHECRFDGFKMQPFVWLERCWVDTNEFTYEWITHHHCVDNVIFENTYKCATVNVEKKLFLHPTQWGVLCARDGMCHINEEMYDPTWVLCYHNDWSTGDMRHSADNKTGFHLPIEARLQKACCNQLRGNDFWKEFIVFKIEWIMLSHEHIHYYKFMEYAAYHHDLHKQFKNECQPPEFPHLAAREFDPRRDPMNYTIHKYDWYYYVTIEYVQEMLQQHYYVKIFFNPGLNMEAGKDVYIDRVFKKHHTVNDNDVAAWHSNKDLHLLKMWCKRGQAWPYDDWPKGGGDKKGSPLPHFVCMYVFTNHETPRILAQWLQYPLKATLWFEYMLYFEAAPQDMKQHREWGCHHRTCYVFSIPHSICDECYYSPRSPNALECDNNGLEPYTLSVKYCKFYQDQQFDITPRPDHIDNKDSLTPCHMYKVDCFNNPVCETRHKIEFACPWFTAWVIFNIKRILHWMGVCPQNFVWVGRVCGGEQDRKGRQNHNHTVMHIMHYNAFPCNSDSFCYKPIQWFHRRIVASPRYTFNVFLWTFVSNPNVYCVPSHDDCWDWEEDELPMHTGMYRDAHVKHSLNPRIYMNQVNALNHPLLNRYPEMLWMVTRPHVQMLCEAVILQFPSFGRMQIDNQQKCRMADGQAIEFYRNVHTNYCRLSSDYLDFSCHIVRNSIEWMEEANWEIKIAYSCIQTTDCAGNEDMQQLPGSFIWHGMKFGGAWIEFHKFYFMGWHKGVEVILDARAEHKLRMNCHRTSRDMGWIAMPTQVRLHYYGACSEMMAPGHYRWGLIAFWQARCCYGLPFVACVDWDLTTHVWSAYNRSRQNQFQGFESIPGDTERTRRKMRRFCMPQFDLDWHSSFRLCKYICWGVQPDLMRFPQYLPDFFDTCNTELPWQICGAAPVLKLSHLWKSDFTHQMFDDHTSSYLVNAIDFREHLYDGVIFYPSRTSRDHWDQPGSDEYSNLDRKETHYTWQDDYNPEECGHPGHRNNCWGKQTKAIIPNHISQCMSWERNITAPIEVKAYEKMSFRPSSQWYEGCHWMITTCHHWMMQNNFGNCQFSDQKDHYENCDFNFINLWCGALSQLEFEQSYEETNKIWPYCHEVVLALTVNLVMMQRITAHDMDHKEEFHLYNHDQDQHQMTPAKVLNHNNVTPFICMTTRPHFDCDQYNWPMRTIASTTCNVQKSAVVSSSYMDDIHSVRYGKVCKRVQEVTAYYNPFFNLHIRNTERCDKSSLVPVLWDEHHRKSEAVTGLKSSTDNPETKGHWCNILCLFIEMCTQDYDISLYRRKHPTKHATCTKQIEHAASISPSSMITHVKDDIMRKSIEEWFDSIYYTKCTIKHCTEHHMTFVGTRRQESHNTRRLGTSQWKHHCKCTQVMTFIHYHTWIIYVNKKQGRWHAGRVSFTKQPHCCYQCNVPQNCVWHPPYCYSSRAFFEMKILMDGLALEWWYQLRTDLVQDADRAHFTRLPWKMDASSCTFAPWMECCNAQRRIGIHRGQSESRRQSECQDSFDDILKGFAASERNCIRPFRMNRLGYQDMDVIQVSSFTNDLNITRHPIDINSWVFACQTVFIGWIGAHWYRKERSQTCISEYQVQGAEVATKMKCAGFCSDSMMQYFYGDIRARYDVTLEPCLETKNKAMYVYDLEQCPQHWYRCNSTLHNHLTFECFRFDVAYSFPYRIIQSLILRCKSPKLHVYNEWDHLIGLDAIWPHRHQSFQATWTTPHWNKNALTHFWFHPFDWAFVRRQYNCCWTDCINCVPPVVADWGMKVWFEQCLYSWRFPIGLQINAWWESCFCWNFYHDHSGGVPSQYPLRMGLPNVNMVNCWPDCYTYRTFGDMAHSQREKTLTMPPQRHIAPNKWIAQEKGCCHTERWNTELQHPFETDKNLPHWCDWDNYMKWTMNNEQEETENNHWCIFYARRGQPNGKRKRCLKLLGNNMDNDKAEVKSEAGHMHCWQCDQSVYLKLCPLWIYRCECCRTCLRNPRSVANVIYGTAMDWEQPSCNNLVYNVHCWMHQTFSTANEEAATDEGKPTWWNVVYHFEWWIIDRHTMLMHSFLHQIWQWKWKVELKMNYRYWKSINMYFNPYNPLCWNPPWCWMCPYFKGVRTLKLRKVWPRPQMSIFNSIMLIEWNTFISRSNWKEHDDDWDNFHGNTCGLHVINNENIQNSESYCNVGLPKQPAPFFFNPEGNYKMAWHWHMLAWHVNHTYMHVATAGKYFVERWDFCLFP"

printfn "%i\n%s\n%s" gm xa xb
